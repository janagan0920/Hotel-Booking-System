{"ast":null,"code":"import axios from \"axios\";\n\n// Base URL for your backend\nconst API_BASE_URL = \"http://localhost:8080/api\";\n\n// ---- BOOKINGS ----\n\nexport const createBooking = async bookingData => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/bookings`, bookingData, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    // Convert backend object to a friendly message\n    const backendError = (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data;\n    throw backendError || error;\n  }\n};\n\n// Get all bookings\nexport const getAllBookings = async () => {\n  const response = await axios.get(`${API_BASE_URL}/bookings`);\n  return response.data;\n};\n\n// Alias for backward compatibility with old components\nexport const getBookings = getAllBookings;\n\n// Get booking by ID\nexport const getBookingById = async id => {\n  const response = await axios.get(`${API_BASE_URL}/bookings/${id}`);\n  return response.data;\n};\n\n// Update booking status (Admin)\nexport const updateBookingStatus = async (id, status) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/bookings/${id}/status`, {\n      status\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// ---- ROOMS ----\n\n// Get all rooms\nexport const getRooms = async () => {\n  const response = await axios.get(`${API_BASE_URL}/rooms`);\n  return response.data;\n};\n\n// Get only available rooms\nexport const getAvailableRooms = async () => {\n  const response = await axios.get(`${API_BASE_URL}/rooms/available`);\n  return response.data;\n};","map":{"version":3,"names":["axios","API_BASE_URL","createBooking","bookingData","response","post","headers","data","error","_error$response","backendError","getAllBookings","get","getBookings","getBookingById","id","updateBookingStatus","status","put","getRooms","getAvailableRooms"],"sources":["C:/Users/Janagan.B/Downloads/Api_2/e27c38fb-adca-42d8-9399-27bb06ea685d-74adbe4d-df9b-49a9-8f95-099684294ff3-main/reactapp/src/utils/api.js"],"sourcesContent":["import axios from \"axios\";\n\n// Base URL for your backend\nconst API_BASE_URL = \"http://localhost:8080/api\";\n\n// ---- BOOKINGS ----\n\nexport const createBooking = async (bookingData) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/bookings`, bookingData, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    return response.data;\n  } catch (error) {\n    // Convert backend object to a friendly message\n    const backendError = error.response?.data;\n    throw backendError || error;\n  }\n};\n\n// Get all bookings\nexport const getAllBookings = async () => {\n  const response = await axios.get(`${API_BASE_URL}/bookings`);\n  return response.data;\n};\n\n// Alias for backward compatibility with old components\nexport const getBookings = getAllBookings;\n\n// Get booking by ID\nexport const getBookingById = async (id) => {\n  const response = await axios.get(`${API_BASE_URL}/bookings/${id}`);\n  return response.data;\n};\n\n// Update booking status (Admin)\nexport const updateBookingStatus = async (id, status) => {\n  try {\n    const response = await axios.put(\n      `${API_BASE_URL}/bookings/${id}/status`,\n      { status },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// ---- ROOMS ----\n\n// Get all rooms\nexport const getRooms = async () => {\n  const response = await axios.get(`${API_BASE_URL}/rooms`);\n  return response.data;\n};\n\n// Get only available rooms\nexport const getAvailableRooms = async () => {\n  const response = await axios.get(`${API_BASE_URL}/rooms/available`);\n  return response.data;\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,YAAY,GAAG,2BAA2B;;AAEhD;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAOC,WAAW,IAAK;EAClD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,YAAY,WAAW,EAAEE,WAAW,EAAE;MACzEG,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAOF,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACd;IACA,MAAMC,YAAY,IAAAD,eAAA,GAAGD,KAAK,CAACJ,QAAQ,cAAAK,eAAA,uBAAdA,eAAA,CAAgBF,IAAI;IACzC,MAAMG,YAAY,IAAIF,KAAK;EAC7B;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,MAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAACY,GAAG,CAAC,GAAGX,YAAY,WAAW,CAAC;EAC5D,OAAOG,QAAQ,CAACG,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMM,WAAW,GAAGF,cAAc;;AAEzC;AACA,OAAO,MAAMG,cAAc,GAAG,MAAOC,EAAE,IAAK;EAC1C,MAAMX,QAAQ,GAAG,MAAMJ,KAAK,CAACY,GAAG,CAAC,GAAGX,YAAY,aAAac,EAAE,EAAE,CAAC;EAClE,OAAOX,QAAQ,CAACG,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMS,mBAAmB,GAAG,MAAAA,CAAOD,EAAE,EAAEE,MAAM,KAAK;EACvD,IAAI;IACF,MAAMb,QAAQ,GAAG,MAAMJ,KAAK,CAACkB,GAAG,CAC9B,GAAGjB,YAAY,aAAac,EAAE,SAAS,EACvC;MAAEE;IAAO,CAAC,EACV;MACEX,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CACF,CAAC;IACD,OAAOF,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;;AAEA;AACA,OAAO,MAAMW,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAMf,QAAQ,GAAG,MAAMJ,KAAK,CAACY,GAAG,CAAC,GAAGX,YAAY,QAAQ,CAAC;EACzD,OAAOG,QAAQ,CAACG,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMa,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC3C,MAAMhB,QAAQ,GAAG,MAAMJ,KAAK,CAACY,GAAG,CAAC,GAAGX,YAAY,kBAAkB,CAAC;EACnE,OAAOG,QAAQ,CAACG,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}